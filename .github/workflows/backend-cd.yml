name: backend-workflow-cd

# Triggers
on:
    # Manual trigger using the workflow_dispatch event
    workflow_dispatch:
    # Automatic trigger on pull request events targeting the main branch
    push:
        branches:
            - main
        paths: backend/**

jobs:
    linting:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code source backend
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.10'

            - name: Install Dependencies
              run: |
                  pip install --upgrade pipenv
                  cd backend
                  pipenv install flake8
                  pipenv install

            - name: Run linting
              run: |
                  cd backend
                  pipenv run lint
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code source backend
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.10'

            - name: Install Dependencies
              run: |
                  pip install --upgrade pipenv
                  cd backend
                  pipenv install

            - name: Run test
              run: |
                  cd backend
                  pipenv run test

    build:
        runs-on: ubuntu-latest
        needs: [linting, test]
        environment: staging
        steps:
            - name: Checkout code source backend
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            # - name: Docker environment setup
            #   uses: byloth/docker-setup-action@v1
            - name: Build, tag, and push docker image to Amazon ECR
              env:
                  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  REPOSITORY: backend
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  cd backend
                  docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
                  docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
            - name: Deploy
              env:
                  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  REPOSITORY: backend
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  aws eks update-kubeconfig --name cluster
                  cd backend/k8s
                  kustomize edit set image backend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
                  kustomize build | kubectl apply -f -
